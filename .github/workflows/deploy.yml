name: Deploy Backend to EC2 using Docker

on:
  push:
    branches:
      - deploy

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 拉取代码
        uses: actions/checkout@v3

      - name: 设置 JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 编译 Spring Boot 应用
        run: |
          mvn clean package -DskipTests
          ls -la target/

      - name: 确保 JAR 文件存在
        run: test -f target/backend-web-0.0.1-SNAPSHOT.jar || exit 1

      - name: 登录 Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: 构建 Docker 镜像
        run: |
          docker build -t hzhenj/backend-web .
          docker tag hzhenj/backend-web:latest hzhenj/backend-web:latest

      - name: 推送 Docker 镜像到 Docker Hub
        run: docker push hzhenj/backend-web:latest

      - name: SSH 连接到 EC2 并部署
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # 确保 Docker 已安装
            if ! command -v docker &> /dev/null
            then
              echo "🚀 Docker 未安装，开始安装..."
              sudo apt update
              sudo apt install docker.io -y
              sudo systemctl start docker
              sudo systemctl enable docker
            else
              echo "✅ Docker 已安装"
            fi

            # 确保 `ubuntu` 用户有 Docker 权限
            if ! groups | grep -q "docker"
            then
              echo "🔑 授予 ubuntu 用户 Docker 访问权限..."
              sudo usermod -aG docker $USER
              newgrp docker
            else
              echo "✅ ubuntu 用户已具备 Docker 权限"
            fi

            # 拉取最新 Docker 镜像
            docker pull hzhenj/backend-web:latest

            # 强制删除已存在的 `backend-web` 容器（无论是否运行）
            if [ "$(docker ps -aq -f name=backend-web)" ]; then
              echo "🔴 删除旧的 backend-web 容器..."
              docker stop backend-web || true
              docker rm backend-web
            else
              echo "✅ 没有需要删除的 backend-web 容器"
            fi

            # 运行新容器
            echo "🚀 启动新容器..."
            docker run -d --name backend-web -p 8080:8080 hzhenj/backend-web:latest


